{"ast":null,"code":"import { clone } from '../../utils/object';\nimport { flatten as flattenArray } from '../../utils/array';\nimport { factory } from '../../utils/factory';\nconst name = 'flatten';\nconst dependencies = ['typed', 'matrix'];\nexport const createFlatten =\n/* #__PURE__ */\nfactory(name, dependencies, ({\n  typed,\n  matrix\n}) => {\n  /**\n   * Flatten a multi dimensional matrix into a single dimensional matrix.\n   *\n   * Syntax:\n   *\n   *    math.flatten(x)\n   *\n   * Examples:\n   *\n   *    math.flatten([[1,2], [3,4]])   // returns [1, 2, 3, 4]\n   *\n   * See also:\n   *\n   *    concat, resize, size, squeeze\n   *\n   * @param {Matrix | Array} x   Matrix to be flattened\n   * @return {Matrix | Array} Returns the flattened matrix\n   */\n  return typed(name, {\n    'Array': function (x) {\n      return flattenArray(clone(x));\n    },\n    'Matrix': function (x) {\n      const flat = flattenArray(clone(x.toArray())); // TODO: return the same matrix type as x\n\n      return matrix(flat);\n    }\n  });\n});","map":null,"metadata":{},"sourceType":"module"}