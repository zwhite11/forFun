{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacsw\\\\Documents\\\\Projects\\\\calculator\\\\src\\\\components\\\\calculator\\\\calculator.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CalcFunctions from './calcFunctions';\nimport Display from './display';\nimport Keypad from './keypad';\nconst calc = new CalcFunctions();\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expression: [],\n      value: ''\n    };\n    this.handleOnNumber = this.handleOnNumber.bind(this);\n    this.handleOnClearEvery = this.handleOnClearEvery.bind(this); // this.handleOnPlusMinus = this.handleOnPlusMinus.bind(this);\n    // this.handleOnPercentage = this.handleOnPercentage.bind(this);\n    // this.handleOnDivide = this.handleOnDivide.bind(this);\n    // this.handleOnMultiply = this.handleOnMultiple.bind(this);\n    // this.handleOnSubtract = this.handleOnSubtract.bind(this);\n\n    this.handleOnAdd = this.handleOnAdd.bind(this); // this.handleOnDecimal = this.handleOnDecimal.bind(this);\n\n    this.handleOnEquals = this.handleOnEquals.bind(this);\n  }\n\n  handleOnNumber(digit) {\n    console.log(\"digit\", digit);\n    console.log(\"expression\", this.state.expression);\n    calc.enterDigit(digit);\n    this.setState({\n      value: calc.getCurrentValue()\n    });\n  }\n\n  handleOnAdd() {\n    calc.add();\n    this.setState({\n      expression: calc.getExpression(),\n      value: calc.getCurrentValue().toString()\n    });\n  }\n\n  handleOnEquals() {\n    calc.equals();\n    this.setState({\n      expression: calc.getExpression(),\n      value: calc.getCurrentValue().toString()\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Display, {\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Keypad, {\n      onNumber: this.handleOnNumber,\n      onAdd: this.handleOnAdd,\n      onEquals: this.handleOnEquals,\n      onClearEver: this.handleOnClearEvery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\zacsw\\Documents\\Projects\\calculator\\src\\components\\calculator\\calculator.js"],"names":["React","PropTypes","CalcFunctions","Display","Keypad","calc","Calculator","Component","constructor","props","state","expression","value","handleOnNumber","bind","handleOnClearEvery","handleOnAdd","handleOnEquals","digit","console","log","enterDigit","setState","getCurrentValue","add","getExpression","toString","equals","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,IAAI,GAAG,IAAIH,aAAJ,EAAb;AAEA,eAAe,MAAMI,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAKA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B,CARe,CASf;AACA;AACA;AACA;AACA;;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB,CAde,CAef;;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AAEH;;AAEDD,EAAAA,cAAc,CAACK,KAAD,EAAQ;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKV,KAAL,CAAWC,UAArC;AACAN,IAAAA,IAAI,CAACgB,UAAL,CAAgBH,KAAhB;AACA,SAAKI,QAAL,CACI;AAAEV,MAAAA,KAAK,EAAEP,IAAI,CAACkB,eAAL;AAAT,KADJ;AAIH;;AAEDP,EAAAA,WAAW,GAAG;AACVX,IAAAA,IAAI,CAACmB,GAAL;AAEA,SAAKF,QAAL,CAAc;AACVX,MAAAA,UAAU,EAAEN,IAAI,CAACoB,aAAL,EADF;AAEVb,MAAAA,KAAK,EAAEP,IAAI,CAACkB,eAAL,GAAuBG,QAAvB;AAFG,KAAd;AAKH;;AAEDT,EAAAA,cAAc,GAAG;AACbZ,IAAAA,IAAI,CAACsB,MAAL;AAEA,SAAKL,QAAL,CAAc;AACVX,MAAAA,UAAU,EAAEN,IAAI,CAACoB,aAAL,EADF;AAEVb,MAAAA,KAAK,EAAEP,IAAI,CAACkB,eAAL,GAAuBG,QAAvB;AAFG,KAAd;AAKH;;AAGDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWE,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAE,KAAKC,cADnB;AAEI,MAAA,KAAK,EAAE,KAAKG,WAFhB;AAGI,MAAA,QAAQ,EAAE,KAAKC,cAHnB;AAII,MAAA,WAAW,EAAE,KAAKF,kBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAaH;;AAlEmD","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CalcFunctions from './calcFunctions';\r\nimport Display from './display';\r\nimport Keypad from './keypad';\r\n\r\nconst calc = new CalcFunctions();\r\n\r\nexport default class Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expression: [],\r\n            value: ''\r\n        }\r\n\r\n        this.handleOnNumber = this.handleOnNumber.bind(this);\r\n        this.handleOnClearEvery = this.handleOnClearEvery.bind(this);\r\n        // this.handleOnPlusMinus = this.handleOnPlusMinus.bind(this);\r\n        // this.handleOnPercentage = this.handleOnPercentage.bind(this);\r\n        // this.handleOnDivide = this.handleOnDivide.bind(this);\r\n        // this.handleOnMultiply = this.handleOnMultiple.bind(this);\r\n        // this.handleOnSubtract = this.handleOnSubtract.bind(this);\r\n        this.handleOnAdd = this.handleOnAdd.bind(this);\r\n        // this.handleOnDecimal = this.handleOnDecimal.bind(this);\r\n        this.handleOnEquals = this.handleOnEquals.bind(this);\r\n\r\n    }\r\n\r\n    handleOnNumber(digit) {\r\n        console.log(\"digit\", digit);\r\n        console.log(\"expression\", this.state.expression)\r\n        calc.enterDigit(digit);\r\n        this.setState(\r\n            { value: calc.getCurrentValue() }\r\n        )\r\n\r\n    }\r\n\r\n    handleOnAdd() {\r\n        calc.add();\r\n\r\n        this.setState({\r\n            expression: calc.getExpression(),\r\n            value: calc.getCurrentValue().toString()\r\n        })\r\n\r\n    }\r\n\r\n    handleOnEquals() {\r\n        calc.equals();\r\n\r\n        this.setState({\r\n            expression: calc.getExpression(),\r\n            value: calc.getCurrentValue().toString()\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Display value={this.state.value} />\r\n                <Keypad\r\n                    onNumber={this.handleOnNumber}\r\n                    onAdd={this.handleOnAdd}\r\n                    onEquals={this.handleOnEquals}\r\n                    onClearEver={this.handleOnClearEvery} />\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}