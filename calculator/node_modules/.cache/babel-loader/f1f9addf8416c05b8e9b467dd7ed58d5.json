{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacsw\\\\Documents\\\\Projects\\\\calculator\\\\src\\\\components\\\\calculator\\\\calculator.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport CalcFunctions from './calcFunctions';\nimport Display from './display';\nimport Keypad from './keypad';\nconst calc = new CalcFunctions();\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expression: [],\n      value: ''\n    };\n    this.handleOnNumber = this.handleOnNumber.bind(this);\n    this.handleOnClearEvery = this.handleOnClearEvery.bind(this);\n    this.handleOnPlusMinus = this.handleOnPlusMinus.bind(this);\n    this.handleOnPercentage = this.handleOnPercentage.bind(this);\n    this.handleOnDivide = this.handleOnDivide.bind(this);\n    this.handleOnMultiply = this.handleOnMultiply.bind(this);\n    this.handleOnSubtract = this.handleOnSubtract.bind(this);\n    this.handleOnAdd = this.handleOnAdd.bind(this);\n    this.handleOnDecimal = this.handleOnDecimal.bind(this);\n    this.handleOnEquals = this.handleOnEquals.bind(this);\n  }\n\n  handleOnDecimal() {\n    calc.decimal();\n    this.setState({\n      expression: calc.getExpression(),\n      value: calc.getCurrentValue().toString()\n    });\n  }\n\n  handleOnPercentage() {\n    calc.percentage();\n    this.setState({\n      expression: calc.getExpression(),\n      value: calc.getCurrentValue().toString()\n    });\n  }\n\n  handleOnClearEvery() {\n    calc.clearEvery();\n    this.setState({\n      expression: calc.getExpression(),\n      value: calc.getCurrentValue().toString()\n    });\n  }\n\n  changeClearType() {}\n\n  handleOnNumber(digit) {\n    calc.enterDigit(digit);\n    this.setState({\n      value: calc.getCurrentValue()\n    });\n  }\n\n  handleOnAdd() {\n    calc.add();\n    this.setState({\n      expression: calc.getExpression(),\n      value: calc.getCurrentValue().toString()\n    });\n  }\n\n  handleOnSubtract() {\n    calc.subtract();\n    this.setState({\n      expression: calc.getExpression(),\n      value: calc.getCurrentValue().toString()\n    });\n  }\n\n  handleOnPlusMinus() {\n    calc.plusMinus();\n    this.setState({\n      expression: calc.getExpression(),\n      value: calc.getCurrentValue().toString()\n    });\n  }\n\n  handleOnMultiply() {\n    calc.multiply();\n    this.setState({\n      expression: calc.getExpression(),\n      value: calc.getCurrentValue().toString()\n    });\n  }\n\n  handleOnDivide() {\n    calc.divide();\n    this.setState({\n      expression: calc.getExpression(),\n      value: calc.getCurrentValue().toString()\n    });\n  }\n\n  handleOnEquals() {\n    calc.equals();\n    this.setState({\n      expression: calc.getExpression(),\n      value: calc.getCurrentValue().toString()\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Display, {\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Keypad, {\n      onNumber: this.handleOnNumber,\n      onPlusMinus: this.handleOnPlusMinus,\n      onAdd: this.handleOnAdd,\n      onSubtract: this.handleOnSubtract,\n      onPercentage: this.handleOnPercentage,\n      onMultiply: this.handleOnMultiply,\n      onDivide: this.handleOnDivide,\n      onDecimal: this.handleOnDecimal,\n      onEquals: this.handleOnEquals,\n      onClearEvery: this.handleOnClearEvery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\zacsw\\Documents\\Projects\\calculator\\src\\components\\calculator\\calculator.js"],"names":["React","PropTypes","ReactDOM","CalcFunctions","Display","Keypad","calc","Calculator","Component","constructor","props","state","expression","value","handleOnNumber","bind","handleOnClearEvery","handleOnPlusMinus","handleOnPercentage","handleOnDivide","handleOnMultiply","handleOnSubtract","handleOnAdd","handleOnDecimal","handleOnEquals","decimal","setState","getExpression","getCurrentValue","toString","percentage","clearEvery","changeClearType","digit","enterDigit","add","subtract","plusMinus","multiply","divide","equals","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,IAAI,GAAG,IAAIH,aAAJ,EAAb;AAEA,eAAe,MAAMI,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAKA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKG,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBH,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKI,cAAL,GAAsB,KAAKA,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKK,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBL,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKM,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBN,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKO,WAAL,GAAmB,KAAKA,WAAL,CAAiBP,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKQ,eAAL,GAAuB,KAAKA,eAAL,CAAqBR,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKS,cAAL,GAAsB,KAAKA,cAAL,CAAoBT,IAApB,CAAyB,IAAzB,CAAtB;AAEH;;AAEDQ,EAAAA,eAAe,GAAG;AACdjB,IAAAA,IAAI,CAACmB,OAAL;AAEA,SAAKC,QAAL,CAAc;AACVd,MAAAA,UAAU,EAAEN,IAAI,CAACqB,aAAL,EADF;AAEVd,MAAAA,KAAK,EAAEP,IAAI,CAACsB,eAAL,GAAuBC,QAAvB;AAFG,KAAd;AAKH;;AAEDX,EAAAA,kBAAkB,GAAG;AACjBZ,IAAAA,IAAI,CAACwB,UAAL;AAEA,SAAKJ,QAAL,CAAc;AACVd,MAAAA,UAAU,EAAEN,IAAI,CAACqB,aAAL,EADF;AAEVd,MAAAA,KAAK,EAAEP,IAAI,CAACsB,eAAL,GAAuBC,QAAvB;AAFG,KAAd;AAIH;;AAEDb,EAAAA,kBAAkB,GAAG;AACjBV,IAAAA,IAAI,CAACyB,UAAL;AACA,SAAKL,QAAL,CAAc;AACVd,MAAAA,UAAU,EAAEN,IAAI,CAACqB,aAAL,EADF;AAEVd,MAAAA,KAAK,EAAEP,IAAI,CAACsB,eAAL,GAAuBC,QAAvB;AAFG,KAAd;AAIH;;AAEDG,EAAAA,eAAe,GAAG,CAEjB;;AAEDlB,EAAAA,cAAc,CAACmB,KAAD,EAAQ;AAClB3B,IAAAA,IAAI,CAAC4B,UAAL,CAAgBD,KAAhB;AACA,SAAKP,QAAL,CACI;AAAEb,MAAAA,KAAK,EAAEP,IAAI,CAACsB,eAAL;AAAT,KADJ;AAIH;;AAEDN,EAAAA,WAAW,GAAG;AACVhB,IAAAA,IAAI,CAAC6B,GAAL;AAEA,SAAKT,QAAL,CAAc;AACVd,MAAAA,UAAU,EAAEN,IAAI,CAACqB,aAAL,EADF;AAEVd,MAAAA,KAAK,EAAEP,IAAI,CAACsB,eAAL,GAAuBC,QAAvB;AAFG,KAAd;AAKH;;AAEDR,EAAAA,gBAAgB,GAAG;AACff,IAAAA,IAAI,CAAC8B,QAAL;AAEA,SAAKV,QAAL,CAAc;AACVd,MAAAA,UAAU,EAAEN,IAAI,CAACqB,aAAL,EADF;AAEVd,MAAAA,KAAK,EAAEP,IAAI,CAACsB,eAAL,GAAuBC,QAAvB;AAFG,KAAd;AAKH;;AAEDZ,EAAAA,iBAAiB,GAAG;AAChBX,IAAAA,IAAI,CAAC+B,SAAL;AACA,SAAKX,QAAL,CAAc;AACVd,MAAAA,UAAU,EAAEN,IAAI,CAACqB,aAAL,EADF;AAEVd,MAAAA,KAAK,EAAEP,IAAI,CAACsB,eAAL,GAAuBC,QAAvB;AAFG,KAAd;AAIH;;AAEDT,EAAAA,gBAAgB,GAAG;AACfd,IAAAA,IAAI,CAACgC,QAAL;AAEA,SAAKZ,QAAL,CAAc;AACVd,MAAAA,UAAU,EAAEN,IAAI,CAACqB,aAAL,EADF;AAEVd,MAAAA,KAAK,EAAEP,IAAI,CAACsB,eAAL,GAAuBC,QAAvB;AAFG,KAAd;AAIH;;AAEDV,EAAAA,cAAc,GAAG;AACbb,IAAAA,IAAI,CAACiC,MAAL;AAEA,SAAKb,QAAL,CAAc;AACVd,MAAAA,UAAU,EAAEN,IAAI,CAACqB,aAAL,EADF;AAEVd,MAAAA,KAAK,EAAEP,IAAI,CAACsB,eAAL,GAAuBC,QAAvB;AAFG,KAAd;AAIH;;AAEDL,EAAAA,cAAc,GAAG;AACblB,IAAAA,IAAI,CAACkC,MAAL;AAEA,SAAKd,QAAL,CAAc;AACVd,MAAAA,UAAU,EAAEN,IAAI,CAACqB,aAAL,EADF;AAEVd,MAAAA,KAAK,EAAEP,IAAI,CAACsB,eAAL,GAAuBC,QAAvB;AAFG,KAAd;AAKH;;AAGDY,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWE,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAE,KAAKC,cADnB;AAEI,MAAA,WAAW,EAAE,KAAKG,iBAFtB;AAGI,MAAA,KAAK,EAAE,KAAKK,WAHhB;AAII,MAAA,UAAU,EAAE,KAAKD,gBAJrB;AAKI,MAAA,YAAY,EAAE,KAAKH,kBALvB;AAMI,MAAA,UAAU,EAAE,KAAKE,gBANrB;AAOI,MAAA,QAAQ,EAAE,KAAKD,cAPnB;AAQI,MAAA,SAAS,EAAE,KAAKI,eARpB;AASI,MAAA,QAAQ,EAAE,KAAKC,cATnB;AAUI,MAAA,YAAY,EAAE,KAAKR,kBAVvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAmBH;;AAzImD","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport CalcFunctions from './calcFunctions';\r\nimport Display from './display';\r\nimport Keypad from './keypad';\r\n\r\nconst calc = new CalcFunctions();\r\n\r\nexport default class Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expression: [],\r\n            value: ''\r\n        }\r\n\r\n        this.handleOnNumber = this.handleOnNumber.bind(this);\r\n        this.handleOnClearEvery = this.handleOnClearEvery.bind(this);\r\n        this.handleOnPlusMinus = this.handleOnPlusMinus.bind(this);\r\n        this.handleOnPercentage = this.handleOnPercentage.bind(this);\r\n        this.handleOnDivide = this.handleOnDivide.bind(this);\r\n        this.handleOnMultiply = this.handleOnMultiply.bind(this);\r\n        this.handleOnSubtract = this.handleOnSubtract.bind(this);\r\n        this.handleOnAdd = this.handleOnAdd.bind(this);\r\n        this.handleOnDecimal = this.handleOnDecimal.bind(this);\r\n        this.handleOnEquals = this.handleOnEquals.bind(this);\r\n\r\n    }\r\n\r\n    handleOnDecimal() {\r\n        calc.decimal();\r\n\r\n        this.setState({\r\n            expression: calc.getExpression(),\r\n            value: calc.getCurrentValue().toString()\r\n        })\r\n\r\n    }\r\n\r\n    handleOnPercentage() {\r\n        calc.percentage();\r\n\r\n        this.setState({\r\n            expression: calc.getExpression(),\r\n            value: calc.getCurrentValue().toString()\r\n        })\r\n    }\r\n\r\n    handleOnClearEvery() {\r\n        calc.clearEvery();\r\n        this.setState({\r\n            expression: calc.getExpression(),\r\n            value: calc.getCurrentValue().toString()\r\n        })\r\n    }\r\n\r\n    changeClearType() {\r\n\r\n    }\r\n\r\n    handleOnNumber(digit) {\r\n        calc.enterDigit(digit);\r\n        this.setState(\r\n            { value: calc.getCurrentValue() }\r\n        )\r\n\r\n    }\r\n\r\n    handleOnAdd() {\r\n        calc.add();\r\n\r\n        this.setState({\r\n            expression: calc.getExpression(),\r\n            value: calc.getCurrentValue().toString()\r\n        })\r\n\r\n    }\r\n\r\n    handleOnSubtract() {\r\n        calc.subtract();\r\n\r\n        this.setState({\r\n            expression: calc.getExpression(),\r\n            value: calc.getCurrentValue().toString()\r\n        })\r\n\r\n    }\r\n\r\n    handleOnPlusMinus() {\r\n        calc.plusMinus();\r\n        this.setState({\r\n            expression: calc.getExpression(),\r\n            value: calc.getCurrentValue().toString()\r\n        })\r\n    }\r\n\r\n    handleOnMultiply() {\r\n        calc.multiply();\r\n\r\n        this.setState({\r\n            expression: calc.getExpression(),\r\n            value: calc.getCurrentValue().toString()\r\n        })\r\n    }\r\n\r\n    handleOnDivide() {\r\n        calc.divide();\r\n\r\n        this.setState({\r\n            expression: calc.getExpression(),\r\n            value: calc.getCurrentValue().toString()\r\n        })\r\n    }\r\n\r\n    handleOnEquals() {\r\n        calc.equals();\r\n\r\n        this.setState({\r\n            expression: calc.getExpression(),\r\n            value: calc.getCurrentValue().toString()\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Display value={this.state.value} />\r\n                <Keypad\r\n                    onNumber={this.handleOnNumber}\r\n                    onPlusMinus={this.handleOnPlusMinus}\r\n                    onAdd={this.handleOnAdd}\r\n                    onSubtract={this.handleOnSubtract}\r\n                    onPercentage={this.handleOnPercentage}\r\n                    onMultiply={this.handleOnMultiply}\r\n                    onDivide={this.handleOnDivide}\r\n                    onDecimal={this.handleOnDecimal}\r\n                    onEquals={this.handleOnEquals}\r\n                    onClearEvery={this.handleOnClearEvery} />\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}