{"ast":null,"code":"import { factory } from '../../utils/factory';\nimport { createRange } from '../../function/matrix/range';\nconst name = 'range';\nconst dependencies = ['typed', 'config', '?matrix', '?bignumber', 'smaller', 'smallerEq', 'larger', 'largerEq'];\nexport const createRangeTransform =\n/* #__PURE__ */\nfactory(name, dependencies, ({\n  typed,\n  config,\n  matrix,\n  bignumber,\n  smaller,\n  smallerEq,\n  larger,\n  largerEq\n}) => {\n  const range = createRange({\n    typed,\n    config,\n    matrix,\n    bignumber,\n    smaller,\n    smallerEq,\n    larger,\n    largerEq\n  });\n  /**\n   * Attach a transform function to math.range\n   * Adds a property transform containing the transform function.\n   *\n   * This transform creates a range which includes the end value\n   */\n\n  return typed('range', {\n    '...any': function (args) {\n      const lastIndex = args.length - 1;\n      const last = args[lastIndex];\n\n      if (typeof last !== 'boolean') {\n        // append a parameter includeEnd=true\n        args.push(true);\n      }\n\n      return range.apply(null, args);\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":null,"metadata":{},"sourceType":"module"}