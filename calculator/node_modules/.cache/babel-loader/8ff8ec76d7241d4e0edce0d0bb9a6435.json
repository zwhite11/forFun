{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacsw\\\\Documents\\\\Projects\\\\calculator\\\\src\\\\components\\\\calculator\\\\calculator.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CalcFunctions from './calcFunctions';\nimport Display from './display';\nimport Keypad from './keypad';\nconst calc = new CalcFunctions();\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expression: [],\n      currentValue: ''\n    };\n    this.handleOnNumber = this.handleOnNumber.bind(this); // this.handleOnClearEvery = this.handleOnClearEvery.bind(this);\n    // this.handleOnPlusMinus = this.handleOnPlusMinus.bind(this);\n    // this.handleOnPercentage = this.handleOnPercentage.bind(this);\n    // this.handleOnDivide = this.handleOnDivide.bind(this);\n    // this.handleOnMultiply = this.handleOnMultiple.bind(this);\n    // this.handleOnSubtract = this.handleOnSubtract.bind(this);\n    // this.handleOnAdd = this.handleOnAdd.bind(this);\n    // this.handleOnDecimal = this.handleOnDecimal.bind(this);\n    // this.handleOnEquals = this.handleOnEquals.bind(this);\n  }\n\n  handleOnNumber(digit) {\n    calc.enterDigit(digit);\n    this.setState({\n      currentValue: calc.getCurrentValue\n    });\n  }\n\n  handleOnAdd() {\n    calc.add();\n    this.setState({\n      expression: calc.getExpression,\n      currentValue: calc.getValue.toString()\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Display, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Keypad, {\n      onNumber: this.handleOnNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\zacsw\\Documents\\Projects\\calculator\\src\\components\\calculator\\calculator.js"],"names":["React","PropTypes","CalcFunctions","Display","Keypad","calc","Calculator","Component","constructor","props","state","expression","currentValue","handleOnNumber","bind","digit","enterDigit","setState","getCurrentValue","handleOnAdd","add","getExpression","getValue","toString","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,IAAI,GAAG,IAAIH,aAAJ,EAAb;AAEA,eAAe,MAAMI,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAKA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB,CAPe,CAQf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;AAEDD,EAAAA,cAAc,CAACE,KAAD,EAAQ;AAClBV,IAAAA,IAAI,CAACW,UAAL,CAAgBD,KAAhB;AACA,SAAKE,QAAL,CACI;AAAEL,MAAAA,YAAY,EAAEP,IAAI,CAACa;AAArB,KADJ;AAIH;;AAEDC,EAAAA,WAAW,GAAG;AACVd,IAAAA,IAAI,CAACe,GAAL;AAEA,SAAKH,QAAL,CAAc;AACVN,MAAAA,UAAU,EAAEN,IAAI,CAACgB,aADP;AAEVT,MAAAA,YAAY,EAAEP,IAAI,CAACiB,QAAL,CAAcC,QAAd;AAFJ,KAAd;AAIH;;AAGDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAE,KAAKX,cADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAUH;;AAlDmD","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CalcFunctions from './calcFunctions';\r\nimport Display from './display';\r\nimport Keypad from './keypad';\r\n\r\nconst calc = new CalcFunctions();\r\n\r\nexport default class Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expression: [],\r\n            currentValue: ''\r\n        }\r\n\r\n        this.handleOnNumber = this.handleOnNumber.bind(this);\r\n        // this.handleOnClearEvery = this.handleOnClearEvery.bind(this);\r\n        // this.handleOnPlusMinus = this.handleOnPlusMinus.bind(this);\r\n        // this.handleOnPercentage = this.handleOnPercentage.bind(this);\r\n        // this.handleOnDivide = this.handleOnDivide.bind(this);\r\n        // this.handleOnMultiply = this.handleOnMultiple.bind(this);\r\n        // this.handleOnSubtract = this.handleOnSubtract.bind(this);\r\n        // this.handleOnAdd = this.handleOnAdd.bind(this);\r\n        // this.handleOnDecimal = this.handleOnDecimal.bind(this);\r\n        // this.handleOnEquals = this.handleOnEquals.bind(this);\r\n\r\n    }\r\n\r\n    handleOnNumber(digit) {\r\n        calc.enterDigit(digit);\r\n        this.setState(\r\n            { currentValue: calc.getCurrentValue }\r\n        )\r\n\r\n    }\r\n\r\n    handleOnAdd() {\r\n        calc.add();\r\n\r\n        this.setState({\r\n            expression: calc.getExpression,\r\n            currentValue: calc.getValue.toString()\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Display />\r\n                <Keypad\r\n                    onNumber={this.handleOnNumber} />\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}